SELECT ENTRY_DATE 
	,PARTICULARS
	,VOUCHER_PREFIX
	,VOUCHER_POSTFIX
	,ISSUED_WEIGHT
	,ISSUED_ALLOY
	,ISSUED_ALLOY_UNIT_CODE
	,ISSUED_TOTAL_WEIGHT
	,RECEIVED_WEIGHT
	,RECEIVED_ALLOY
	,RECEIVED_ALLOY_UNIT_CODE
	,RECEIVED_TOTAL_WEIGHT
	,LABOUR
	,PAYMENT
FROM 
(
(SELECT
	 DATE_FORMAT(IV.ENTRY_DATE,'%d-%m-%Y') AS ENTRY_DATE
	,CONCAT(ITO.ITEM_NAME, '/', ITI.ITEM_NAME)  AS PARTICULARS
	,IV.VOUCHER_PREFIX
	,IV.VOUCHER_POSTFIX
	,IVI.ISSUE_WEIGHT AS ISSUED_WEIGHT
	,IVI.ISSUE_WEIGHT * IVI.ALLOY_RATE / WU.DIVISOR_FACTOR  AS ISSUED_ALLOY
	,WU.UNIT_CODE AS ISSUED_ALLOY_UNIT_CODE
	,ACTUAL_WEIGHT AS ISSUED_TOTAL_WEIGHT
	,NULL AS RECEIVED_WEIGHT
	,NULL  AS RECEIVED_ALLOY
	,NULL AS RECEIVED_ALLOY_UNIT_CODE
	,NULL AS RECEIVED_TOTAL_WEIGHT
	,NULL AS LABOUR
	,NULL AS PAYMENT
FROM		inventory_vendor_stock_vouchers AS IV 
INNER JOIN 	inventory_vendor_stock_voucher_items AS IVI ON IV.INVENTORY_VENDOR_STOCK_VOUCHER_ID = IVI.INVENTORY_VENDOR_STOCK_VOUCHER_ID
INNER JOIN 	items AS ITO ON ITO.ITEM_ID = IVI.ISSUE_ITEM_ID
INNER JOIN 	items AS ITI ON ITI.ITEM_ID = IVI.ACTUAL_ITEM_ID
INNER JOIN 	wastage_units AS WU ON WU.WASTAGE_UNIT_ID = IVI.ALLOY_WASTAGE_UNIT_ID
WHERE IV.VOUCHER_PREFIX ='VI' 
AND IV.ENTRY_DATE BETWEEN $P{CRITERIA_DATE_FROM} AND $P{CRITERIA_DATE_TO}
AND IV.INVENTORY_ACCOUNT_ID_IN=$P{VENDOR_LEDGER_ACCOUNT_ID}
)
UNION ALL 
(SELECT
	 DATE_FORMAT(IV.ENTRY_DATE,'%d-%m-%Y') AS ENTRY_DATE
	,CONCAT(ITO.ITEM_NAME, '/', ITI.ITEM_NAME) AS PARTICULARS
	,IV.VOUCHER_PREFIX
	,IV.VOUCHER_POSTFIX
	,NULL AS ISSUED_WEIGHT
	,NULL AS ISSUED_ALLOY
	,NULL AS ISSUED_ALLOY_UNIT_CODE
	,NULL AS ISSUED_TOTAL_WEIGHT
	,IVI.ISSUE_WEIGHT AS RECEIVED_WEIGHT
	,IVI.ISSUE_WEIGHT * IVI.ALLOY_RATE / WU.DIVISOR_FACTOR  AS RECEIVED_ALLOY
	,WU.UNIT_CODE AS RECEIVED_ALLOY_UNIT_CODE
	,ACTUAL_WEIGHT AS RECEIVED_TOTAL_WEIGHT
	,NULL AS LABOUR
	,NULL AS PAYMENT
FROM		inventory_vendor_stock_vouchers AS IV 
INNER JOIN 	inventory_vendor_stock_voucher_items AS IVI ON IV.INVENTORY_VENDOR_STOCK_VOUCHER_ID = IVI.INVENTORY_VENDOR_STOCK_VOUCHER_ID
INNER JOIN 	items AS ITO ON ITO.ITEM_ID = IVI.ISSUE_ITEM_ID
INNER JOIN 	items AS ITI ON ITI.ITEM_ID = IVI.ACTUAL_ITEM_ID
INNER JOIN 	wastage_units AS WU ON WU.WASTAGE_UNIT_ID = IVI.ALLOY_WASTAGE_UNIT_ID
WHERE IV.VOUCHER_PREFIX ='VR'
AND IV.ENTRY_DATE BETWEEN $P{CRITERIA_DATE_FROM} AND $P{CRITERIA_DATE_TO}
AND IV.INVENTORY_ACCOUNT_ID_OUT=$P{VENDOR_LEDGER_ACCOUNT_ID}
)
UNION ALL 
(SELECT 	  	 
		 DATE_FORMAT(OP.PROCESS_END_DATE,'%d-%m-%Y')
		,CONCAT(if(PM.ITEM_ID IS NULL ,BI.ITEM_NAME, PM.ITEM_NAME ),',\n' , LC.ACCOUNT_CODE_PREFIX,' ', LC.ACCOUNT_CODE_POSTFIX,' ',LC.TITLE,', ',IO.ITEM_NAME,'\n',OP.COMMENTS) AS PARTICULARS
		,'SO' AS VOUCHER_PREFIX
		,SO.SALES_ORDER_TRACKING_ID AS VOUCHER_POSTFIX
		,NULL AS ISSUED_WEIGHT
		,NULL AS ISSUED_ALLOY
		,NULL AS ISSUED_ALLOY_UNIT_CODE
		,if(PM.ITEM_ID IS NULL ,OP.ISSUE_BODY_WEIGHT, NULL ) AS ISSUED_TOTAL_WEIGHT
		,PM.WEIGHT AS RECEIVED_WEIGHT
		,PM.WASTAGE_QUANTITY AS RECEIVED_WASTAGE
		,PM.UNIT_CODE AS RECEIVED_ALLOY_UNIT_CODE
		,if(PM.ITEM_ID IS NULL ,OP.RETURN_BODY_WEIGHT, PM.NET_WEIGHT ) AS RECEIVED_TOTAL_WEIGHT
		,IFNULL(GL.GEMS_LABOUR_CHARGES,0.0) + OP.LUMSUM_LABOUR AS LABOUR
		,NULL AS PAYMENT
FROM sales_order_processes OP 
LEFT OUTER JOIN ( 	SELECT  SALES_ORDER_PROCESS_ID, SUM(IF(GL.ACTUAL_TOTAL_LABOUR  > 0.0, GL.ACTUAL_TOTAL_LABOUR, GL.ESTIMATED_TOTAL_LABOUR  )) AS GEMS_LABOUR_CHARGES
			 		FROM sales_order_process_gem_labours GL
			 		GROUP BY SALES_ORDER_PROCESS_ID 
			 	) GL ON GL.SALES_ORDER_PROCESS_ID=OP.SALES_ORDER_PROCESS_ID
			 	
LEFT OUTER JOIN	(	SELECT PM.SALES_ORDER_PROCESS_ID, PM.ITEM_ID, PM.WEIGHT, PMI.ITEM_NAME,PM.WASTAGE_QUANTITY , WU.UNIT_CODE, PM.NET_WEIGHT
				 	FROM  sales_order_process_metal_used PM 
					INNER JOIN items PMI ON PMI.ITEM_ID=PM.ITEM_ID 
					INNER JOIN wastage_units WU ON WU.WASTAGE_UNIT_ID = PM.WASTAGE_UNIT_ID ) PM ON PM.SALES_ORDER_PROCESS_ID=OP.SALES_ORDER_PROCESS_ID
INNER JOIN sales_order_items OI ON OI.SALES_ORDER_ITEM_ID=OP.SALES_ORDER_ITEM_ID
INNER JOIN sales_orders SO ON SO.SALES_ORDER_ID=OP.SALES_ORDER_ID
INNER JOIN ledger_accounts LC ON LC.LEDGER_ACCOUNT_ID=SO.CUSTOMER_LEDGER_ACCOUNT_ID 
INNER JOIN items IO ON IO.ITEM_ID=OI.JEWELLERY_ITEM_ID
INNER JOIN items BI ON BI.ITEM_ID=OP.BODY_METAL_ITEM_ID

WHERE OP.PROCESS_END_DATE BETWEEN $P{CRITERIA_DATE_FROM} AND $P{CRITERIA_DATE_TO}
AND OP.VENDOR_LEDGER_ACCOUNT_ID=$P{VENDOR_LEDGER_ACCOUNT_ID}
) 
UNION ALL 
( SELECT 
	 DATE_FORMAT(ENTRY_DATE,'%d-%m-%Y') 
	,''
	,VOUCHER_PREFIX
	,VOUCHER_POSTFIX
	,NULL AS ISSUED_WEIGHT
	,NULL AS ISSUED_ALLOY
	,NULL AS ISSUED_ALLOY_UNIT_CODE
	,NULL AS ISSUED_TOTAL_WEIGHT
	,NULL AS LABOUR
	,NULL AS RECEIVED_WEIGHT
	,NULL  AS RECEIVED_ALLOY
	,NULL AS RECEIVED_ALLOY_UNIT_CODE
	,NULL AS LABOUR
	,AMOUNT
FROM ledger_entries
WHERE ENTRY_DATE BETWEEN $P{CRITERIA_DATE_FROM} AND $P{CRITERIA_DATE_TO}
AND LEDGER_ACCOUNT_ID_DEBIT=$P{VENDOR_LEDGER_ACCOUNT_ID})
UNION ALL 
( SELECT 
	 DATE_FORMAT(ENTRY_DATE,'%d-%m-%Y') 
	,''
	,VOUCHER_PREFIX
	,VOUCHER_POSTFIX
	,NULL AS ISSUED_WEIGHT
	,NULL AS ISSUED_ALLOY
	,NULL AS ISSUED_ALLOY_UNIT_CODE
	,NULL AS ISSUED_TOTAL_WEIGHT
	,NULL AS LABOUR
	,NULL AS RECEIVED_WEIGHT
	,NULL  AS RECEIVED_ALLOY
	,NULL AS RECEIVED_ALLOY_UNIT_CODE
	,AMOUNT  AS LABOUR
	,NULL AS AMOUNT
FROM ledger_entries
WHERE ENTRY_DATE BETWEEN $P{CRITERIA_DATE_FROM} AND $P{CRITERIA_DATE_TO}
AND LEDGER_ACCOUNT_ID_CREDIT=$P{VENDOR_LEDGER_ACCOUNT_ID})
) zz
ORDER BY ENTRY_DATE